lua_package_path "/www/web/lua-resty-upload/lib/?.lua;;";

server {
    listen 80;
    server_name upload.example.com;

    client_max_body_size 1028m;

    root /www/web/upload-demo;
    index index.html index.htm index.php;

    location / {
        try_files $uri $uri/ =404;
    }

	location /upload {
        content_by_lua '
            local upload = require "resty.upload"
            local cjson = require "cjson"

            local chunk_size = 5 -- should be set to 4096 or 8192
                                 -- for real-world settings

            local form, err = upload:new(chunk_size)
            if not form then
                ngx.log(ngx.ERR, "failed to new upload: ", err)
                ngx.exit(500)
            end

            form:set_timeout(1000) -- 1 sec

            while true do
                local typ, res, err = form:read()
                if not typ then
                    ngx.say("failed to read: ", err)
                    return
                end

                ngx.say("read: ", cjson.encode({typ, res}))

                if typ == "eof" then
                    break
                end
            end

            local typ, res, err = form:read()
            ngx.say("read: ", cjson.encode({typ, res}))
        ';
    }

    location ~ \.php$ {
		fastcgi_index index.php;
        fastcgi_pass 127.0.0.1:9000;
		include fastcgi.conf;
    }
}